{"version":3,"sources":["GetData.js","Person.js","images/vinson.jpg","images/chimin.jpg","images/junhui.jpg","App.js","reportWebVitals.js","index.js"],"names":["GetData","load","a","doc","useServiceAccountAuth","creds","loadInfo","sheet","sheetsByIndex","getRows","rows","winnings","totalWinnings","vinson","chimin","junhui","forEach","row","parseFloat","this","sheetId","GoogleSpreadsheet","Person","props","style","backgroundImage","img","className","App","useState","setWinnings","useEffect","getData","then","response","name","Vinson","Chimin","Junhui","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"g1FA4BeA,EAxBX,aAAe,IAAD,gCAMdC,KANc,sBAMP,sBAAAC,EAAA,sEACG,EAAKC,IAAIC,sBAAsB,EAAKC,OADvC,uBAEG,EAAKF,IAAIG,WAFZ,cAGH,EAAKC,MAAQ,EAAKJ,IAAIK,cAAc,GAHjC,SAIe,EAAKD,MAAME,UAJ1B,OAIH,EAAKC,KAJF,kDANO,KAadC,SAAW,WACP,IAAIC,EAAgB,CAAEC,OAAQ,EAAGC,OAAQ,EAAGC,OAAQ,GAMpD,OALA,EAAKL,KAAKM,SAAQ,SAACC,GACfL,EAAcC,QAAUK,WAAWD,EAAIJ,QACvCD,EAAcE,QAAUI,WAAWD,EAAIH,QACvCF,EAAcG,QAAUG,WAAWD,EAAIF,WAEpCH,GAnBPO,KAAKd,MAAQA,EACbc,KAAKC,QAAU,+CACfD,KAAKhB,IAAM,IAAIkB,oBAAkBF,KAAKC,UCS/BE,MAhBf,SAAgBC,GACZ,IAAMC,EAAQ,CAAEC,gBAAgB,OAAD,OAASF,EAAMG,IAAf,MAE/B,OACI,sBAAKC,UAAU,iBAAf,UACI,qBACIA,UAAU,qCACVH,MAAOA,IAEX,qBAAKG,UAAU,+EAAf,SACI,qBAAIA,UAAU,0BAAd,eAA2CJ,EAAMZ,kBCVlD,MAA0B,mCCA1B,MAA0B,mCCA1B,MAA0B,mCC4C1BiB,MApCf,WAAgB,IAAD,EACqBC,mBAAS,WAD9B,mBACJlB,EADI,KACMmB,EADN,KAUX,OAPAC,qBAAU,WACN,IAAMC,EAAU,IAAIhC,EACpBgC,EACK/B,OACAgC,MAAK,kBAAMD,EAAQrB,cACnBsB,MAAK,SAACC,GAAD,OAAcJ,EAAYI,SAGpC,qBAAKP,UAAU,MAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,cAAf,SACI,qBAAKA,UAAU,MAAf,SACI,oBAAIA,UAAU,kCAAd,oCAKR,cAAC,EAAD,CAAQQ,KAAK,SAASxB,SAAUA,EAASE,OAAQa,IAAKU,IACtD,cAAC,EAAD,CACID,KAAK,UACLxB,SAAUA,EAASG,OACnBY,IAAKW,IAET,cAAC,EAAD,CACIF,KAAK,UACLxB,SAAUA,EAASI,OACnBW,IAAKY,UCzBVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.ff4bc12b.chunk.js","sourcesContent":["import { GoogleSpreadsheet } from \"google-spreadsheet\";\nimport creds from \"./creds.json\";\n\nclass GetData {\n    constructor() {\n        this.creds = creds;\n        this.sheetId = \"11dt-oyCdi5iNKrGJrQLg6sMNGmpitiF5rLGiX3yvGoE\";\n        this.doc = new GoogleSpreadsheet(this.sheetId);\n    }\n\n    load = async () => {\n        await this.doc.useServiceAccountAuth(this.creds);\n        await this.doc.loadInfo();\n        this.sheet = this.doc.sheetsByIndex[0];\n        this.rows = await this.sheet.getRows();\n    };\n\n    winnings = () => {\n        let totalWinnings = { vinson: 0, chimin: 0, junhui: 0 };\n        this.rows.forEach((row) => {\n            totalWinnings.vinson += parseFloat(row.vinson);\n            totalWinnings.chimin += parseFloat(row.chimin);\n            totalWinnings.junhui += parseFloat(row.junhui);\n        });\n        return totalWinnings;\n    };\n}\n\nexport default GetData;\n","function Person(props) {\n    const style = { backgroundImage: `url(${props.img})` };\n\n    return (\n        <div className=\"row person-row\">\n            <div\n                className=\"col-12 col-md-6 p-5 person-picture\"\n                style={style}\n            ></div>\n            <div className=\"col-12 col-md-6 p-3 bg-dark d-flex align-items-center justify-content-center\">\n                <h5 className=\"pri-font m-0 text-white\"> ${props.winnings}</h5>\n            </div>\n        </div>\n    );\n}\n\nexport default Person;\n","export default __webpack_public_path__ + \"static/media/vinson.a1a4ae1c.jpg\";","export default __webpack_public_path__ + \"static/media/chimin.92fdd636.jpg\";","export default __webpack_public_path__ + \"static/media/junhui.0e801f85.jpg\";","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport GetData from \"./GetData\";\nimport Person from \"./Person\";\nimport Vinson from \"./images/vinson.jpg\";\nimport Chimin from \"./images/chimin.jpg\";\nimport Junhui from \"./images/junhui.jpg\";\n\nfunction App() {\n    const [winnings, setWinnings] = useState(\"Loading\");\n\n    useEffect(() => {\n        const getData = new GetData();\n        getData\n            .load()\n            .then(() => getData.winnings())\n            .then((response) => setWinnings(response));\n    });\n    return (\n        <div className=\"App\">\n            <div className=\"container-fluid\">\n                <div className=\"row bg-dark\">\n                    <div className=\"col\">\n                        <h1 className=\"pri-font text-white text-center\">\n                            The Pasir Ris Boys\n                        </h1>\n                    </div>\n                </div>\n                <Person name=\"Vinson\" winnings={winnings.vinson} img={Vinson} />\n                <Person\n                    name=\"Chi Min\"\n                    winnings={winnings.chimin}\n                    img={Chimin}\n                />\n                <Person\n                    name=\"Jun Hui\"\n                    winnings={winnings.junhui}\n                    img={Junhui}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}