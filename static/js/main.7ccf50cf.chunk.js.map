{"version":3,"sources":["pages/components/Header.js","pages/components/InputForm.js","pages/components/Input.js","pages/components/Layout.js","pages/utils/GetData.js","pages/components/Person.js","static/img/vinson.jpg","static/img/chimin.jpg","static/img/junhui.jpg","pages/components/People.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","InputGroup","value","setValue","type","aria-label","onChange","e","target","InputForm","getData","setWinnings","useState","vinson","setVinson","chimin","setChimin","junhui","setJunhui","submitRecords","a","validateRecords","alert","addRecords","load","consolidateWinnings","parseInt","onClick","Input","showInput","setShowInput","Layout","children","GetData","doc","useServiceAccountAuth","creds","loadInfo","winningsSheet","sheetsByIndex","getRows","winningsRows","console","log","consolidatedWinnings","Vinson","ChiMin","JunHui","forEach","row","parseFloat","date","Date","now","newRow","toLocaleDateString","addRow","this","sheetId","GoogleSpreadsheet","Person","winnings","profilePic","src","alt","People","color","height","width","vinsonImg","chiminImg","junhuiImg","Home","setGetData","useEffect","loadData","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ccf50cf.chunk.js","sourcesContent":["const Header = (props) => {\n    return (\n        <div className=\"row\">\n            <div className=\"col\">\n                <h1 className=\"display-6\">The Pasir Ris Boys</h1>\n            </div>\n        </div>\n    );\n};\n\nexport default Header;\n","import { useState } from \"react\";\n\nconst InputForm = (props) => {\n    const { getData, setWinnings } = props;\n\n    const [vinson, setVinson] = useState(0);\n    const [chimin, setChimin] = useState(0);\n    const [junhui, setJunhui] = useState(0);\n\n    const submitRecords = async () => {\n        if (!validateRecords()) {\n            alert(\"Entries do not add up to 0\");\n            return;\n        }\n\n        setWinnings(null);\n        await getData.addRecords(vinson, chimin, junhui);\n        await getData.load();\n        setWinnings(getData.consolidateWinnings());\n    };\n\n    const validateRecords = () => {\n        const v = parseInt(vinson);\n        const c = parseInt(chimin);\n        const j = parseInt(junhui);\n\n        return v + c + j === 0;\n    };\n\n    return (\n        <div className=\"col-12\">\n            <InputGroup value={vinson} setValue={setVinson} />\n            <InputGroup value={chimin} setValue={setChimin} />\n            <InputGroup value={junhui} setValue={setJunhui} />\n            <button className=\"btn\" onClick={submitRecords}>\n                Submit\n            </button>\n        </div>\n    );\n};\n\nconst InputGroup = (props) => {\n    const { value, setValue } = props;\n\n    const handleChange = (e) => {\n        setValue(e.target.value);\n    };\n\n    return (\n        <div className=\"input-group mb-3\">\n            <span className=\"input-group-text\">$</span>\n            <input\n                type=\"number\"\n                className=\"form-control\"\n                aria-label=\"Amount (to the nearest dollar)\"\n                value={value}\n                onChange={handleChange}\n            />\n        </div>\n    );\n};\n\nexport default InputForm;\n","import { useState } from \"react\";\nimport InputForm from \"./InputForm\";\n\nconst Input = (props) => {\n    const { getData, setWinnings } = props;\n\n    const [showInput, setShowInput] = useState(false);\n\n    return (\n        <div className=\"row\">\n            <div className=\"col\">\n                <button className=\"btn\" onClick={() => setShowInput(true)}>\n                    Add record\n                </button>\n            </div>\n            {showInput && (\n                <InputForm getData={getData} setWinnings={setWinnings} />\n            )}\n        </div>\n    );\n};\n\nexport default Input;\n","const Layout = (props) => {\n    return <div className=\"App container\">{props.children}</div>;\n};\n\nexport default Layout;\n","import { GoogleSpreadsheet } from \"google-spreadsheet\";\nimport creds from \"./creds.json\";\n\nclass GetData {\n    constructor() {\n        this.creds = creds;\n        this.sheetId = \"11dt-oyCdi5iNKrGJrQLg6sMNGmpitiF5rLGiX3yvGoE\";\n        this.doc = new GoogleSpreadsheet(this.sheetId);\n    }\n\n    load = async () => {\n        await this.doc.useServiceAccountAuth(this.creds);\n        await this.doc.loadInfo();\n        this.winningsSheet = this.doc.sheetsByIndex[0];\n        this.winningsRows = await this.winningsSheet.getRows();\n        console.log(\"load ran\");\n        return this.winningsRows;\n    };\n\n    consolidateWinnings = () => {\n        this.consolidatedWinnings = { Vinson: 0, ChiMin: 0, JunHui: 0 };\n        this.winningsRows.forEach((row) => {\n            this.consolidatedWinnings.Vinson += parseFloat(row.Vinson);\n            this.consolidatedWinnings.ChiMin += parseFloat(row.ChiMin);\n            this.consolidatedWinnings.JunHui += parseFloat(row.JunHui);\n        });\n        return this.consolidatedWinnings;\n    };\n\n    addRecords = async (vinson, chimin, junhui) => {\n        const date = new Date(Date.now());\n        const newRow = {\n            date: date.toLocaleDateString(),\n            Vinson: vinson,\n            ChiMin: chimin,\n            JunHui: junhui,\n        };\n        await this.winningsSheet.addRow(newRow);\n    };\n}\n\nexport default GetData;\n","const Person = (props) => {\n    const { winnings, profilePic } = props;\n    return (\n        <div className=\"col-12 col-md-4\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <img\n                        src={profilePic}\n                        className=\"img-thumbnail\"\n                        alt=\"Profile Pic of Vinson\"\n                    />\n                </div>\n                <div className=\"col-12\">\n                    <p className=\"lead\">${winnings}</p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Person;\n","export default __webpack_public_path__ + \"static/media/vinson.bae49a2a.jpg\";","export default __webpack_public_path__ + \"static/media/chimin.64e11868.jpg\";","export default __webpack_public_path__ + \"static/media/junhui.536ab23a.jpg\";","import { useEffect, useState } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport GetData from \"../utils/GetData\";\nimport Person from \"./Person\";\nimport vinsonImg from \"../../static/img/vinson.jpg\";\nimport chiminImg from \"../../static/img/chimin.jpg\";\nimport junhuiImg from \"../../static/img/junhui.jpg\";\n\nconst People = (props) => {\n    const { winnings } = props;\n\n    return (\n        <div className=\"row\">\n            {!winnings && (\n                <div className=\"col\">\n                    <Loader\n                        type=\"Rings\"\n                        color=\"#00BFFF\"\n                        height={100}\n                        width={100}\n                    />\n                </div>\n            )}\n            {winnings && (\n                <>\n                    <Person winnings={winnings.Vinson} profilePic={vinsonImg} />\n                    <Person winnings={winnings.ChiMin} profilePic={chiminImg} />\n                    <Person winnings={winnings.JunHui} profilePic={junhuiImg} />\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default People;\n","import { useEffect, useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Input from \"./components/Input\";\nimport Layout from \"./components/Layout\";\nimport People from \"./components/People\";\nimport GetData from \"./utils/GetData\";\n\nconst Home = () => {\n    const [getData, setGetData] = useState(null);\n    const [winnings, setWinnings] = useState(null);\n\n    useEffect(() => {\n        loadData();\n    }, []);\n\n    const loadData = async () => {\n        const getData = new GetData();\n        await getData.load();\n        setWinnings(getData.consolidateWinnings());\n        setGetData(getData);\n    };\n\n    return (\n        <Layout>\n            <Header />\n            <People winnings={winnings} />\n            <Input getData={getData} setWinnings={setWinnings} />\n        </Layout>\n    );\n};\n\nexport default Home;\n","import { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./pages/Home\";\n\nconst App = () => {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/\" exact>\n                    <Home />\n                </Route>\n            </Switch>\n        </Router>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}